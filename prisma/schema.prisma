datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  score score[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model dictation {
  id         String   @id @default(cuid())
  text       String
  title      String @unique
  excerpt     String?
  level      String
  audio_url  String
  audio_name String
  audio_total_part Int
  audio_duration_seconds Int?
  audio_duration_minutes Int?
  score score[]
  @@map("dictation")
}

model helper {
  id  String   @id @default(cuid())
  title String @unique
  generate_type String
  number_vote Int
  helper_word helper_word[]
  description description[] 
  @@map("helper")
}


model word {
  id String @id @default(cuid())
  name String @unique
  helper_word helper_word[]  // Relation: Un Word peut avoir plusieurs Helperwords
  @@map("word")
}

model helper_word {
  id  String   @id @default(cuid())
  word     word     @relation(fields: [word_id], references: [id])  // Relation vers Word
  helper   helper   @relation(fields: [helper_id], references: [id])  // Relation vers Helper
  word_id String
  helper_id String
  @@map("helper_word")
}

model description {
  id        String   @id @default(cuid())
  title     String?
  helperId  String?
  text      String
  helper    helper?  @relation(fields: [helperId], references: [id])

  @@map("description")
}

model score {
  id             String    @id @default(cuid())
  user           User      @relation(fields: [user_id], references: [id])
  user_id         String
  dictation      dictation @relation(fields: [dictation_id], references: [id])
  dictation_id    String
  note           Int
  score          Int
  timer          String
  correct_words  Int
  incorrect_words Int
  pourcentage    Decimal // Utilisez 'Decimal' pour une précision plus élevée
}